#!/bin/bash -e

. config.sh

TEMP_DIR=$(mktemp -d /tmp/.nightly-XXXXXX)

[ -e /tmp/nightly ] && rm -f /tmp/nightly
ln -s $TEMP_DIR /tmp/nightly

echo "Working in $TEMP_DIR"
cd $TEMP_DIR

echo 'Downloading files'
mkdir src
cd src
git clone https://github.com/luwrain/base.git &> ../clone-base.log
cd base/scripts
./lwr-checkout &> ../../../checkout.log
DEST="luwrain-nightly-`date -I`"
./lwr-distr-src "$TEMP_DIR/$DEST"
pushd "$TEMP_DIR" > /dev/null
echo "Processing $DEST"
tar -c "$DEST/" | gzip > "$DEST.tar.gz"
sha1sum "$DEST.tar.gz" > sha1sum.txt
popd > /dev/null

cd ../..
if [ -x ~/lwr-subst ]; then
    echo "Performing substitution"
    ~/lwr-subst
fi
cd base/scripts

echo 'Compiling sources'
./lwr-build &> ../../../log.txt

./lwr-distr-linux "$TEMP_DIR/linux"
./lwr-custom-tsulib-linux "$TEMP_DIR/linux" "$TEMP_DIR/tsulib-linux" &>> ../../../log.txt
./lwr-custom-dm-linux "$TEMP_DIR/linux" "$TEMP_DIR/dm-linux" &>> ../../../log.txt
for i in 64; do
    DEST=luwrain-linux-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/linux/$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    tar -c "$DEST/" | gzip > "$DEST.tar.gz"
    sha1sum "$DEST.tar.gz" >> sha1sum.txt
    popd > /dev/null
done
rmdir "$TEMP_DIR/linux"

# tsulib linux
for i in $LINUX_ARCH; do
    DEST=tsulib-linux-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/tsulib-linux/$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    tar -c "$DEST/" | gzip > "$DEST.tar.gz"
    sha1sum "$DEST.tar.gz" >> sha1sum.txt
    popd > /dev/null
done
rmdir "$TEMP_DIR/tsulib-linux"

for i in $LINUX_ARCH; do
    DEST=dm-linux-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/dm-linux/$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    tar -c "$DEST/" | gzip > "$DEST.tar.gz"
    sha1sum "$DEST.tar.gz" >> sha1sum.txt
    popd > /dev/null
done
rmdir "$TEMP_DIR/dm-linux"

./lwr-distr-win "$TEMP_DIR/win"
./lwr-custom-tsulib-win "$TEMP_DIR/win" "$TEMP_DIR/tsulib-win" &>> ../../../log.txt
./lwr-custom-dm-win "$TEMP_DIR/win" "$TEMP_DIR/dm-win" &>> ../../../log.txt
./lwr-custom-reader-win "$TEMP_DIR/win" "$TEMP_DIR/reader-win" &>> ../../../log.txt
./lwr-custom-anatomy-win "$TEMP_DIR/win" "$TEMP_DIR/anatomy-win" &>> ../../../log.txt

for i in $WIN_ARCH; do
    DEST=luwrain-windows-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/win/$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    zip -r "$DEST.zip" "$DEST" > /dev/null
    sha1sum "$DEST.zip" >> sha1sum.txt
    popd > /dev/null
done
for i in $WIN_ARCH; do
    DEST=luwrain-windows-installer-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/win/installer$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    zip -r "$DEST.zip" "$DEST" > /dev/null
    sha1sum "$DEST.zip" >> sha1sum.txt
    popd > /dev/null
done
rmdir "$TEMP_DIR/win"

#tsulib windows
for i in $WIN_ARCH; do
    DEST=tsulib-windows-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/tsulib-win/$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    zip -r "$DEST.zip" "$DEST" > /dev/null
    sha1sum "$DEST.zip" >> sha1sum.txt
    popd > /dev/null
done
for i in $WIN_ARCH; do
    DEST=tsulib-windows-installer-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/tsulib-win/installer$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    zip -r "$DEST.zip" "$DEST" > /dev/null
    sha1sum "$DEST.zip" >> sha1sum.txt
    popd > /dev/null
done
rmdir "$TEMP_DIR/tsulib-win"

#dm windows
for i in 32 64; do
    DEST=dm-windows-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/dm-win/$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    zip -r "$DEST.zip" "$DEST" > /dev/null
    sha1sum "$DEST.zip" >> sha1sum.txt
    popd > /dev/null
done
for i in 32 64; do
    DEST=dm-windows-installer-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/dm-win/installer$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    zip -r "$DEST.zip" "$DEST" > /dev/null
    sha1sum "$DEST.zip" >> sha1sum.txt
    popd > /dev/null
done
rmdir "$TEMP_DIR/dm-win"

#reader windows
for i in $WIN_ARCH; do
    DEST=reader-windows-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/reader-win/$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    zip -r "$DEST.zip" "$DEST" > /dev/null
    sha1sum "$DEST.zip" >> sha1sum.txt
    popd > /dev/null
done
for i in $WIN_ARCH; do
    DEST=reader-windows-installer-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/reader-win/installer$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    zip -r "$DEST.zip" "$DEST" > /dev/null
    sha1sum "$DEST.zip" >> sha1sum.txt
    popd > /dev/null
done
rmdir "$TEMP_DIR/reader-win"

#anatomy windows
for i in $WIN_ARCH; do
    DEST=anatomy-windows-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/anatomy-win/$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    zip -r "$DEST.zip" "$DEST" > /dev/null
    sha1sum "$DEST.zip" >> sha1sum.txt
    popd > /dev/null
done
for i in $WIN_ARCH; do
    DEST=anatomy-windows-installer-"$i"bit-nightly-"`date -I`"
    echo "Processing $DEST"
    mv "$TEMP_DIR/anatomy-win/installer$i" "$TEMP_DIR/$DEST"
    pushd "$TEMP_DIR" > /dev/null
    zip -r "$DEST.zip" "$DEST" > /dev/null
    sha1sum "$DEST.zip" >> sha1sum.txt
    popd > /dev/null
done
    rmdir "$TEMP_DIR/anatomy-win"



DEST="luwrain-sdk-nightly-`date -I`"
./lwr-distr-sdk "$TEMP_DIR/$DEST" &> ../../../sdk.log
pushd "$TEMP_DIR" > /dev/null
echo "Processing $DEST"
zip -r "$DEST.zip" "$DEST" > /dev/null
sha1sum "$DEST.zip" >> sha1sum.txt
popd > /dev/null

cd "$TEMP_DIR"

RELEASE_DIR=~/nightly-`date -I`

if [ -d "$RELEASE_DIR" ]; then
    echo "${0##*/}:$RELEASE_DIR exists, skipping its creation"
    exit 0
fi

mkdir -p "$RELEASE_DIR"
mv *.txt *.gz *.zip "$RELEASE_DIR"
if [ -r /tmp/lwr-report/junit-noframes.html ]; then
    cp /tmp/lwr-report/junit-noframes.html "$RELEASE_DIR/junit-report.html"
fi

cat <<EOF > "$RELEASE_DIR/version.php"
<?php
function lwr_nightly_latest_date()
{
return "$(date -I)";
}
?>
EOF

echo 'OK!'
